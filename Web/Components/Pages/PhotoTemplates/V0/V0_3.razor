@* https://v0.dev/chat/blazor-photo-gallery-IFRNzs1G7Ez *@

@page "/V0_3"
@namespace Web.Components.Pages.PhotoTemplates.V0
@inherits BasePhotoTemplate

<h1>Photo Gallery V0_3</h1>

@inject IJSRuntime JSRuntime

<div class="photo-gallery">
    @foreach (var photo in Photos)
    {
        <div class="photo-thumbnail" @onclick="() => OpenModal(photo)">
            <img src="@photo.ThumbnailUrl" alt="@photo.Title" loading="lazy" />
        </div>
    }
</div>

@if (isModalOpen)
{
    <div class="modal-overlay" @onclick="CloseModal">
        <div class="modal-content" @onclick:stopPropagation>
            <button class="close-button" @onclick="CloseModal">X</button>
            <img src="@currentPhoto.FullSizeUrl" alt="@currentPhoto.Title" />
            <button class="nav-button prev" @onclick="PreviousPhoto">&lt;</button>
            <button class="nav-button next" @onclick="NextPhoto">&gt;</button>
        </div>
    </div>
}

@code {
    private List<Photo> Photos { get; set; } = new List<Photo>();

    private bool isModalOpen = false;
    private Photo currentPhoto;
    private int currentIndex = 0;

    protected override async Task OnInitializedAsync()
    {
        Photos = GetPhotos();

        await base.OnInitializedAsync();
    }
    
    private void OpenModal(Photo photo)
    {
        currentPhoto = photo;
        currentIndex = Photos.IndexOf(photo);
        isModalOpen = true;
    }

    private void CloseModal()
    {
        isModalOpen = false;
    }

    private void PreviousPhoto()
    {
        currentIndex = (currentIndex - 1 + Photos.Count) % Photos.Count;
        currentPhoto = Photos[currentIndex];
    }

    private void NextPhoto()
    {
        currentIndex = (currentIndex + 1) % Photos.Count;
        currentPhoto = Photos[currentIndex];
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initializeLazyLoading");
        }
    }
}